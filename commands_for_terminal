### Intrinsic Calibration
## Through the camera calibration app:
	rosrun camera_calibration cameracalibrator.py --size 8x6 --square 0.0361 image:=/camera/image_raw camera:=/camera

## Through Camodocal
	## Save the images of chessboard pattern
	roslaunch ueye_cam rgb8.launch ## Run camera
	ROS_NAMESPACE=camera rosrun image_proc image_proc
	rosrun image_view image_view image:=/camera/image_rect_color

	## left click to save the images or right click for kinetic
	## Put these images in data/images2/ 


	## then use those images to run:
	bin/intrinsic_calib -i ../data/images2/ -p img --camera-model mei
	ROS_NAMESPACE=camera rosrun image_proc image_proc
	rosrun image_view image_view image:=/camera/image_rect_color



### AR-Track commands
## For ueye camera: Set frame rate to 5 and check the exposure parameters
roslaunch ueye_cam rgb8.launch 
ROS_NAMESPACE=camera rosrun image_proc image_proc

### If there are no transforms active between the camera frame and the artrack base frame, the package will not work. To get the ar_track_alvar package running, you will need a static transforms.
rosrun tf static_transform_publisher 0.0 0.0 0.0 0.0 0.0 0.0 1.0 <name of camera> <name of output frame in pr2_indiv_no_kinect> 1000

<name of camera> : This is the frame of the camera in the rostopic camera_info. Echo it and get this frame name. The package will not work if the camera is not calibrated internally.
<name of output frame in pr2_indiv_no_kinect>: This is the name of the frame in the pr2_indiv_no_kinect.launch (<arg name="output_frame" default="/base_frame_marker" />)

## Change the parameters in the file "pr2_indiv_no_kinect.launch " before starting
roslaunch ar_track_alvar pr2_indiv_no_kinect.launch 


### Ros msg forwarding
rosrun handeye_calib_camodocal tf_relay_ar

### Touchup with the frame of camera (given as approximate value for the position of camera) for the target 
### Set the target Z as zero manually in the program
### Then
### Run ROS_Smart_servo on the robot

### Running handeye_calib_camodocal
roslaunch handeye_calib_camodocal handeye_file.launch


## For laptop camera
## rosrun cv_camera cv_camera_node
## rosrun image_view image_view image:=/camera/image_rect_color
